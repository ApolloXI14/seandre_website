{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport Slide from './Slide';\n\nclass SlideshowBody extends Component {\n  constructor(props) {\n    super(props);\n    this.myRef = /*#__PURE__*/React.createRef();\n    this.state = {\n      slidesArray: [],\n      slideDotsArray: [],\n      slideIndex: this.props.slideIndex\n    };\n  }\n\n  createSlidesArray(props) {\n    var isCurrentIndex = (index, currentIndex) => {\n      return index === currentIndex;\n    };\n\n    var imgSrcArray = this.props.imgArray.map(img => img.default);\n    return this.props.imgArray.map((img, index) => /*#__PURE__*/React.createElement(Slide, {\n      key: index,\n      index: index + 1,\n      length: imgSrcArray.length,\n      imgSrc: imgSrcArray[index],\n      display: isCurrentIndex(index + 1, this.state.slideIndex) ? \"block\" : \"none\"\n    }));\n  }\n\n  componentDidMount(props) {\n    var slidesArray = this.createSlidesArray(props);\n    var slideDotsArray = this.createSlideshowDotsArray(props);\n    this.setState({\n      slidesArray: slidesArray,\n      slideDotsArray: slideDotsArray\n    });\n    console.log('dfgfdggdfg: ', 'json');\n  }\n\n  changeSlides(index, isDotChange) {\n    function checkSlideLimit(slideIndex, slidesArrayLength) {\n      if (slideIndex + index === 0) {\n        return slidesArrayLength;\n      } else if (slideIndex + index > slidesArrayLength) {\n        return 1;\n      } else {\n        return slideIndex + index;\n      }\n    }\n\n    this.setState((state, props) => ({\n      slideIndex: isDotChange ? index : checkSlideLimit(state.slideIndex, state.slidesArray.length)\n    }), () => {\n      var newSlidesArray = this.createSlidesArray(this.state);\n      this.setState((state, props) => ({\n        slidesArray: newSlidesArray\n      }), () => {\n        this.myRef.current.scrollIntoView(); // ensure scroll to top occurs\n      });\n    });\n  }\n\n  currentSlide(props) {\n    this.changeSlides(props.index, true);\n  }\n\n  createSlideshowDotsArray(props) {\n    var SlideDot = index => {\n      return /*#__PURE__*/React.createElement(\"span\", {\n        className: \"dot\",\n        onClick: this.currentSlide.bind(this, index)\n      });\n    };\n\n    var imgArray = this.props.imgArray;\n    return imgArray.map((img, index) => /*#__PURE__*/React.createElement(SlideDot, {\n      key: index,\n      index: index + 1\n    }));\n  }\n\n  static getStaticProps(context) {\n    return _asyncToGenerator(function* () {\n      var res = yield fetch('https://localhost:3000/public/img/poems');\n      var json = yield res.json();\n      console.log('JSON TEST: ', json);\n    })();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"slideshowBody\"\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      ref: this.myRef,\n      id: \"dotsDiv\"\n    }, this.state.slideDotsArray), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"slideshow-container\",\n      className: \"slideshow-container\"\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"slidesDiv\"\n    }, \" \", this.state.slidesArray, \" \"), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"slideshowButtons\"\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      className: \"prev\",\n      onClick: this.changeSlides.bind(this, -1, false)\n    }, \"\\u276E\"), /*#__PURE__*/React.createElement(\"a\", {\n      className: \"next\",\n      onClick: this.changeSlides.bind(this, 1, false)\n    }, \"\\u276F\"))));\n  }\n\n}\n\nexport default SlideshowBody;","map":null,"metadata":{},"sourceType":"module"}