{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport { useRouter } from 'next/router';\nimport React, { Component } from 'react';\nimport parse from 'html-react-parser';\nimport Link from 'next/link';\nimport styles from '../../styles/journalentry.module.scss';\nexport function getStaticProps() {\n  return _getStaticProps.apply(this, arguments);\n}\n\nfunction _getStaticProps() {\n  _getStaticProps = _asyncToGenerator(function* () {\n    function getFileMetaData(str) {\n      // TODO: Export to own utility later, to de-duplicate\n      var strArr = str.split('__');\n      var fileDate = strArr[0];\n      fileDate = fileDate.replace('./', '');\n      fileDate = fileDate.slice(2, 4) + '/' + fileDate.slice(4, 6) + '/' + fileDate.slice(0, 2);\n      var fileName = strArr[1];\n      fileName = fileName.replace('.txt', '');\n      fileName = fileName.replace(/_/g, ' ');\n      return [fileName, fileDate];\n    }\n\n    var entriesArray = [];\n\n    var req = require.context(process.env.JOURNAL_DIR, true, /.txt$/);\n\n    var reqMap = req.keys().map( /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator(function* (fileName) {\n        entriesArray.push([fileName, getFileMetaData(fileName)]);\n        return entriesArray;\n      });\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }());\n    return {\n      props: {\n        entriesArray: entriesArray.reverse() // reversed for descending dates\n\n      }\n    };\n  });\n  return _getStaticProps.apply(this, arguments);\n}\n\nexport function getStaticPaths() {\n  return _getStaticPaths.apply(this, arguments);\n}\n\nfunction _getStaticPaths() {\n  _getStaticPaths = _asyncToGenerator(function* () {\n    var req = require.context(process.env.JOURNAL_DIR, true, /.txt$/);\n\n    var paths = req.keys().map((fileName, index) => {\n      return {\n        params: {\n          id: index.toString()\n        }\n      };\n    });\n    return {\n      paths,\n      fallback: false\n    };\n  });\n  return _getStaticPaths.apply(this, arguments);\n}\n\nvar JournalEntry = (_ref) => {\n  var {\n    entriesArray\n  } = _ref;\n  //console.log('test: ', entriesArray);\n  var router = useRouter();\n  var {\n    id\n  } = router.query;\n  var entryFileName = entriesArray[id][0];\n  var currentEntryId = Number(id);\n\n  var req = require.context(process.env.JOURNAL_DIR, true, /.txt$/);\n\n  var html = parse(req(entryFileName)); // if (this.myRef && this.myRef.current) {\n  // \tthis.myRef.current.scrollIntoView();\n  // } else {\n  // \tthis.myRef = React.createRef();\n  // }\n  //return <div id=\"journalEntryDiv\">{html}</div>\n  // <div><Link style={{textDecoration: \"none\"}} href=\"/journal\">&#10094; <br/><p className=\"btnTxt\">(Back)</p></Link></div>\n  // <div><Link style={{textDecoration: \"none\"}} href=\"/journal\">&#10095; <br/><p className=\"btnTxt\">(End)</p></Link></div>\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"journalEntryContainer\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: styles['journalEntryDiv-flex']\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.previous\n  }, currentEntryId !== 0 ? /*#__PURE__*/React.createElement(Link, {\n    href: \"/journal/\".concat(currentEntryId - 1)\n  }, \"\\u276E\") : /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(Link, {\n    href: \"/journal\"\n  }, /*#__PURE__*/React.createElement(\"div\", null, \"\\u276E \"), \" \"))), /*#__PURE__*/React.createElement(\"div\", {\n    id: styles.htmlDiv\n  }, html), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.nextBtn\n  }, currentEntryId !== entriesArray.length - 1 ? /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(Link, {\n    href: \"/journal/\".concat(currentEntryId + 1)\n  }, \"\\u276F\")) : /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(Link, {\n    href: \"/journal\"\n  }, \"\\u276F \")))));\n};\n\nexport default JournalEntry;","map":null,"metadata":{},"sourceType":"module"}