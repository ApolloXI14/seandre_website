{"ast":null,"code":"import React, { Component } from 'react';\nimport { Route } from 'react-router-dom';\nimport JournalMenu from '../../components/JournalMenu';\nimport JournalEntry from '../../components/JournalEntry';\nimport ReactDOM from 'react-dom';\nimport Link from 'next/link';\nimport Navbar from '../../components/Navbar';\nimport styles from '../../styles/journalmenu.module.scss';\n\nclass Journal extends Component {\n  constructor(props) {\n    function getFileMetaData(str) {\n      var strArr = str.split('__');\n      var fileDate = strArr[0];\n      fileDate = fileDate.replace('./', '');\n      fileDate = fileDate.slice(2, 4) + '/' + fileDate.slice(4, 6) + '/' + fileDate.slice(0, 2);\n      var fileName = strArr[1];\n      fileName = fileName.replace('.txt', '');\n      fileName = fileName.replace(/_/g, ' ');\n      return [fileName, fileDate];\n    }\n\n    super(props);\n\n    var reqVar = require.context(process.env.JOURNAL_DIR, true, /.txt$/);\n\n    var files = [];\n    reqVar.keys().map((item, index) => {\n      files.push(getFileMetaData(item.replace('./', '')));\n    });\n    this.state = {\n      currentEntryId: null,\n      dataArray: [],\n      fileNameArray: files\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.match.params !== this.props.match.params) {\n      var currentEntryId = this.props.match.params.id ? Number(this.props.match.params.id) - 1 : null; // minusShifting for array\n\n      this.setState((state, props) => ({\n        currentEntryId: currentEntryId\n      }));\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(Navbar, null), /*#__PURE__*/React.createElement(\"div\", {\n      id: styles.journalMenuDiv\n    }, /*#__PURE__*/React.createElement(\"ul\", null, /*#__PURE__*/React.createElement(\"ul\", {\n      className: styles.listClass\n    }, this.state.fileNameArray.map((entry, index) => /*#__PURE__*/React.createElement(\"li\", {\n      key: index++\n    }, /*#__PURE__*/React.createElement(Link, {\n      href: \"journal/\".concat(index - 1)\n    }, entry[0]), \" - \", /*#__PURE__*/React.createElement(\"cite\", {\n      id: styles.citation\n    }, \"Published \", entry[1])))))));\n  }\n\n}\n\nexport default Journal;","map":null,"metadata":{},"sourceType":"module"}