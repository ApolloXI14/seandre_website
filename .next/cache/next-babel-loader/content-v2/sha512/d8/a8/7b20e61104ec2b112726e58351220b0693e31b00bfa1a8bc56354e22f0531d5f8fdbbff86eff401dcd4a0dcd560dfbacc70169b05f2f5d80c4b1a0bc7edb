{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\n// <Link> React components are not handled by \"html-react-parser\"; consider enhancement?\nimport parse from 'html-react-parser';\nimport React, { Component } from 'react';\nexport function ImportData(WrappedComponent, dataArray) {\n  return class importData extends Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        req: this.props.req,\n        dataArray: []\n      };\n    }\n\n    componentDidMount(props) {\n      function getFileMetaData(str) {\n        // TODO: Export to own utility later, to de-duplicate\n        var strArr = str.split('__');\n        var fileDate = strArr[0];\n        fileDate = fileDate.replace('./', '');\n        fileDate = fileDate.slice(2, 4) + '/' + fileDate.slice(4, 6) + '/' + fileDate.slice(0, 2);\n        var fileName = strArr[1];\n        fileName = fileName.replace('.txt', '');\n        fileName = fileName.replace(/_/g, ' ');\n        return [fileName, fileDate];\n      }\n\n      function importAll(req) {\n        var txtfiles = []; // 2D array in [['', ...], ''] form, to get array of metadata (parsed from fileName) and file content\n\n        req.keys().map((fileName, index) => {\n          txtfiles.push([getFileMetaData(fileName), parse(req(fileName))]);\n        });\n        return txtfiles;\n      }\n\n      this.setState((state, props) => ({\n        dataArray: importAll(this.props.req).reverse()\n      }));\n    }\n\n    componentDidUpdate(prevProps) {\n      if (prevProps && prevProps.dataArray && prevProps.dataArray !== this.props.dataArray) {\n        this.setState(() => ({\n          dataArray: this.state.dataArray\n        }));\n      }\n    }\n\n    render() {\n      var _this$props = this.props,\n          {\n        extraProp\n      } = _this$props,\n          passThroughProps = _objectWithoutProperties(_this$props, [\"extraProp\"]);\n\n      var dataArray = this.state.dataArray;\n      return /*#__PURE__*/React.createElement(WrappedComponent, _extends({\n        dataArray: this.state.dataArray\n      }, this.state));\n    }\n\n  };\n}","map":null,"metadata":{},"sourceType":"module"}