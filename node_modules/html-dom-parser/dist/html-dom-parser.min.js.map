{"version":3,"file":"html-dom-parser.min.js","sources":["../lib/constants.js","../lib/utilities.js","../node_modules/domhandler/lib/node.js","../lib/domparser.js","../lib/html-to-dom-client.js"],"sourcesContent":["/**\n * SVG elements are case-sensitive.\n *\n * @see {@link https://developer.mozilla.org/docs/Web/SVG/Element#SVG_elements_A_to_Z}\n */\nvar CASE_SENSITIVE_TAG_NAMES = [\n  'animateMotion',\n  'animateTransform',\n  'clipPath',\n  'feBlend',\n  'feColorMatrix',\n  'feComponentTransfer',\n  'feComposite',\n  'feConvolveMatrix',\n  'feDiffuseLighting',\n  'feDisplacementMap',\n  'feDropShadow',\n  'feFlood',\n  'feFuncA',\n  'feFuncB',\n  'feFuncG',\n  'feFuncR',\n  'feGaussainBlur',\n  'feImage',\n  'feMerge',\n  'feMergeNode',\n  'feMorphology',\n  'feOffset',\n  'fePointLight',\n  'feSpecularLighting',\n  'feSpotLight',\n  'feTile',\n  'feTurbulence',\n  'foreignObject',\n  'linearGradient',\n  'radialGradient',\n  'textPath'\n];\n\nmodule.exports = {\n  CASE_SENSITIVE_TAG_NAMES: CASE_SENSITIVE_TAG_NAMES\n};\n","var constants = require('./constants');\nvar domhandler = require('domhandler/lib/node');\n\nvar CASE_SENSITIVE_TAG_NAMES = constants.CASE_SENSITIVE_TAG_NAMES;\n\nvar Comment = domhandler.Comment;\nvar Element = domhandler.Element;\nvar ProcessingInstruction = domhandler.ProcessingInstruction;\nvar Text = domhandler.Text;\n\nvar caseSensitiveTagNamesMap = {};\nvar tagName;\n\nfor (var i = 0, len = CASE_SENSITIVE_TAG_NAMES.length; i < len; i++) {\n  tagName = CASE_SENSITIVE_TAG_NAMES[i];\n  caseSensitiveTagNamesMap[tagName.toLowerCase()] = tagName;\n}\n\n/**\n * Gets case-sensitive tag name.\n *\n * @param  {string}           tagName - Tag name in lowercase.\n * @return {string|undefined}         - Case-sensitive tag name.\n */\nfunction getCaseSensitiveTagName(tagName) {\n  return caseSensitiveTagNamesMap[tagName];\n}\n\n/**\n * Formats DOM attributes to a hash map.\n *\n * @param  {NamedNodeMap} attributes - List of attributes.\n * @return {object}                  - Map of attribute name to value.\n */\nfunction formatAttributes(attributes) {\n  var result = {};\n  var attribute;\n  // `NamedNodeMap` is array-like\n  for (var i = 0, len = attributes.length; i < len; i++) {\n    attribute = attributes[i];\n    result[attribute.name] = attribute.value;\n  }\n  return result;\n}\n\n/**\n * Corrects the tag name if it is case-sensitive (SVG).\n * Otherwise, returns the lowercase tag name (HTML).\n *\n * @param  {string} tagName - Lowercase tag name.\n * @return {string}         - Formatted tag name.\n */\nfunction formatTagName(tagName) {\n  tagName = tagName.toLowerCase();\n  var caseSensitiveTagName = getCaseSensitiveTagName(tagName);\n  if (caseSensitiveTagName) {\n    return caseSensitiveTagName;\n  }\n  return tagName;\n}\n\n/**\n * Formats the browser DOM nodes to mimic the output of `htmlparser2.parseDOM()`.\n *\n * @param  {NodeList} nodes        - DOM nodes.\n * @param  {Element}  [parentNode] - Formatted parent node.\n * @param  {string}   [directive]  - Directive.\n * @return {Array<Comment|Element|ProcessingInstruction|Text>}\n */\nfunction formatDOM(domNodes, parentNode, directive) {\n  parentNode = parentNode || null;\n\n  var domNode;\n  var node;\n  var prevNode;\n  var output = [];\n\n  for (var i = 0, len = domNodes.length; i < len; i++) {\n    domNode = domNodes[i];\n\n    // set the node data given the type\n    switch (domNode.nodeType) {\n      case 1:\n        // script, style, or tag\n        node = new Element(\n          formatTagName(domNode.nodeName),\n          formatAttributes(domNode.attributes)\n        );\n        node.children = formatDOM(domNode.childNodes, node);\n        break;\n\n      case 3:\n        node = new Text(domNode.nodeValue);\n        break;\n\n      case 8:\n        node = new Comment(domNode.nodeValue);\n        break;\n    }\n\n    // set next for previous node\n    prevNode = output[i - 1] || null;\n    if (prevNode) {\n      prevNode.next = node;\n    }\n\n    // set properties for current node\n    node.parent = parentNode;\n    node.prev = prevNode;\n    node.next = null;\n\n    output.push(node);\n  }\n\n  if (directive) {\n    node = new ProcessingInstruction(\n      directive.substring(0, directive.indexOf(' ')).toLowerCase(),\n      directive\n    );\n    node.next = output[0] || null;\n    node.parent = parentNode;\n    output.unshift(node);\n\n    if (output[1]) {\n      output[1].prev = output[0];\n    }\n  }\n\n  return output;\n}\n\n/**\n * Detects if browser is Internet Explorer.\n *\n * @param  {number}  [version] - IE version to detect.\n * @return {boolean}           - Whether IE or the version is detected.\n */\nfunction isIE(version) {\n  if (version) {\n    return document.documentMode === version;\n  }\n  return /(MSIE |Trident\\/|Edge\\/)/.test(navigator.userAgent);\n}\n\nmodule.exports = {\n  formatAttributes: formatAttributes,\n  formatDOM: formatDOM,\n  isIE: isIE\n};\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.cloneNode = exports.Element = exports.NodeWithChildren = exports.ProcessingInstruction = exports.Comment = exports.Text = exports.DataNode = exports.Node = void 0;\nvar nodeTypes = new Map([\n    [\"tag\" /* Tag */, 1],\n    [\"script\" /* Script */, 1],\n    [\"style\" /* Style */, 1],\n    [\"directive\" /* Directive */, 1],\n    [\"text\" /* Text */, 3],\n    [\"cdata\" /* CDATA */, 4],\n    [\"comment\" /* Comment */, 8],\n]);\n/**\n * This object will be used as the prototype for Nodes when creating a\n * DOM-Level-1-compliant structure.\n */\nvar Node = /** @class */ (function () {\n    /**\n     *\n     * @param type The type of the node.\n     */\n    function Node(type) {\n        this.type = type;\n        /** Parent of the node */\n        this.parent = null;\n        /** Previous sibling */\n        this.prev = null;\n        /** Next sibling */\n        this.next = null;\n        /** The start index of the node. Requires `withStartIndices` on the handler to be `true. */\n        this.startIndex = null;\n        /** The end index of the node. Requires `withEndIndices` on the handler to be `true. */\n        this.endIndex = null;\n    }\n    Object.defineProperty(Node.prototype, \"nodeType\", {\n        // Read-only aliases\n        get: function () {\n            var _a;\n            return (_a = nodeTypes.get(this.type)) !== null && _a !== void 0 ? _a : 1;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Node.prototype, \"parentNode\", {\n        // Read-write aliases for properties\n        get: function () {\n            return this.parent;\n        },\n        set: function (parent) {\n            this.parent = parent;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Node.prototype, \"previousSibling\", {\n        get: function () {\n            return this.prev;\n        },\n        set: function (prev) {\n            this.prev = prev;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Node.prototype, \"nextSibling\", {\n        get: function () {\n            return this.next;\n        },\n        set: function (next) {\n            this.next = next;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Clone this node, and optionally its children.\n     *\n     * @param recursive Clone child nodes as well.\n     * @returns A clone of the node.\n     */\n    Node.prototype.cloneNode = function (recursive) {\n        if (recursive === void 0) { recursive = false; }\n        return cloneNode(this, recursive);\n    };\n    return Node;\n}());\nexports.Node = Node;\nvar DataNode = /** @class */ (function (_super) {\n    __extends(DataNode, _super);\n    /**\n     * @param type The type of the node\n     * @param data The content of the data node\n     */\n    function DataNode(type, data) {\n        var _this = _super.call(this, type) || this;\n        _this.data = data;\n        return _this;\n    }\n    Object.defineProperty(DataNode.prototype, \"nodeValue\", {\n        get: function () {\n            return this.data;\n        },\n        set: function (data) {\n            this.data = data;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return DataNode;\n}(Node));\nexports.DataNode = DataNode;\nvar Text = /** @class */ (function (_super) {\n    __extends(Text, _super);\n    function Text(data) {\n        return _super.call(this, \"text\" /* Text */, data) || this;\n    }\n    return Text;\n}(DataNode));\nexports.Text = Text;\nvar Comment = /** @class */ (function (_super) {\n    __extends(Comment, _super);\n    function Comment(data) {\n        return _super.call(this, \"comment\" /* Comment */, data) || this;\n    }\n    return Comment;\n}(DataNode));\nexports.Comment = Comment;\nvar ProcessingInstruction = /** @class */ (function (_super) {\n    __extends(ProcessingInstruction, _super);\n    function ProcessingInstruction(name, data) {\n        var _this = _super.call(this, \"directive\" /* Directive */, data) || this;\n        _this.name = name;\n        return _this;\n    }\n    return ProcessingInstruction;\n}(DataNode));\nexports.ProcessingInstruction = ProcessingInstruction;\nvar NodeWithChildren = /** @class */ (function (_super) {\n    __extends(NodeWithChildren, _super);\n    /**\n     *\n     * @param type Type of the node.\n     * @param children Children of the node. Only certain node types can have children.\n     */\n    function NodeWithChildren(type, children) {\n        var _this = _super.call(this, type) || this;\n        _this.children = children;\n        return _this;\n    }\n    Object.defineProperty(NodeWithChildren.prototype, \"firstChild\", {\n        // Aliases\n        get: function () {\n            var _a;\n            return (_a = this.children[0]) !== null && _a !== void 0 ? _a : null;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(NodeWithChildren.prototype, \"lastChild\", {\n        get: function () {\n            return this.children.length > 0\n                ? this.children[this.children.length - 1]\n                : null;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(NodeWithChildren.prototype, \"childNodes\", {\n        get: function () {\n            return this.children;\n        },\n        set: function (children) {\n            this.children = children;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return NodeWithChildren;\n}(Node));\nexports.NodeWithChildren = NodeWithChildren;\nvar Element = /** @class */ (function (_super) {\n    __extends(Element, _super);\n    /**\n     * @param name Name of the tag, eg. `div`, `span`.\n     * @param attribs Object mapping attribute names to attribute values.\n     * @param children Children of the node.\n     */\n    function Element(name, attribs, children) {\n        if (children === void 0) { children = []; }\n        var _this = _super.call(this, name === \"script\"\n            ? \"script\" /* Script */\n            : name === \"style\"\n                ? \"style\" /* Style */\n                : \"tag\" /* Tag */, children) || this;\n        _this.name = name;\n        _this.attribs = attribs;\n        _this.attribs = attribs;\n        return _this;\n    }\n    Object.defineProperty(Element.prototype, \"tagName\", {\n        // DOM Level 1 aliases\n        get: function () {\n            return this.name;\n        },\n        set: function (name) {\n            this.name = name;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Element.prototype, \"attributes\", {\n        get: function () {\n            var _this = this;\n            return Object.keys(this.attribs).map(function (name) { return ({\n                name: name,\n                value: _this.attribs[name],\n            }); });\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return Element;\n}(NodeWithChildren));\nexports.Element = Element;\n/**\n * Clone a node, and optionally its children.\n *\n * @param recursive Clone child nodes as well.\n * @returns A clone of the node.\n */\nfunction cloneNode(node, recursive) {\n    if (recursive === void 0) { recursive = false; }\n    switch (node.type) {\n        case \"text\" /* Text */:\n            return new Text(node.data);\n        case \"directive\" /* Directive */: {\n            var instr = node;\n            return new ProcessingInstruction(instr.name, instr.data);\n        }\n        case \"comment\" /* Comment */:\n            return new Comment(node.data);\n        case \"tag\" /* Tag */:\n        case \"script\" /* Script */:\n        case \"style\" /* Style */: {\n            var elem = node;\n            var children = recursive ? cloneChildren(elem.children) : [];\n            var clone_1 = new Element(elem.name, __assign({}, elem.attribs), children);\n            children.forEach(function (child) { return (child.parent = clone_1); });\n            return clone_1;\n        }\n        case \"cdata\" /* CDATA */: {\n            var cdata = node;\n            var children = recursive ? cloneChildren(cdata.children) : [];\n            var clone_2 = new NodeWithChildren(\"cdata\" /* CDATA */, children);\n            children.forEach(function (child) { return (child.parent = clone_2); });\n            return clone_2;\n        }\n        case \"doctype\" /* Doctype */: {\n            // This type isn't used yet.\n            throw new Error(\"Not implemented yet: ElementType.Doctype case\");\n        }\n    }\n}\nexports.cloneNode = cloneNode;\nfunction cloneChildren(childs) {\n    var children = childs.map(function (child) { return cloneNode(child, true); });\n    for (var i = 1; i < children.length; i++) {\n        children[i].prev = children[i - 1];\n        children[i - 1].next = children[i];\n    }\n    return children;\n}\n","var utilities = require('./utilities');\n\n// constants\nvar HTML = 'html';\nvar HEAD = 'head';\nvar BODY = 'body';\nvar FIRST_TAG_REGEX = /<([a-zA-Z]+[0-9]?)/; // e.g., <h1>\nvar HEAD_TAG_REGEX = /<head.*>/i;\nvar BODY_TAG_REGEX = /<body.*>/i;\n// http://www.w3.org/TR/html/syntax.html#void-elements\nvar VOID_ELEMENTS_REGEX = /<(area|base|br|col|embed|hr|img|input|keygen|link|menuitem|meta|param|source|track|wbr)(.*?)\\/?>/gi;\n\n// detect IE browser\nvar isIE9 = utilities.isIE(9);\nvar isIE = isIE9 || utilities.isIE();\n\n// falls back to `parseFromString` if `createHTMLDocument` cannot be used\nvar parseFromDocument = function () {\n  throw new Error(\n    'This browser does not support `document.implementation.createHTMLDocument`'\n  );\n};\n\nvar parseFromString = function () {\n  throw new Error(\n    'This browser does not support `DOMParser.prototype.parseFromString`'\n  );\n};\n\n/**\n * DOMParser (performance: slow).\n *\n * @see https://developer.mozilla.org/docs/Web/API/DOMParser#Parsing_an_SVG_or_HTML_document\n */\nif (typeof window.DOMParser === 'function') {\n  var domParser = new window.DOMParser();\n\n  // IE9 does not support 'text/html' MIME type\n  // https://msdn.microsoft.com/en-us/library/ff975278(v=vs.85).aspx\n  var mimeType = isIE9 ? 'text/xml' : 'text/html';\n\n  /**\n   * Creates an HTML document using `DOMParser.parseFromString`.\n   *\n   * @param  {string} html      - The HTML string.\n   * @param  {string} [tagName] - The element to render the HTML (with 'body' as fallback).\n   * @return {HTMLDocument}\n   */\n  parseFromString = function (html, tagName) {\n    if (tagName) {\n      html = '<' + tagName + '>' + html + '</' + tagName + '>';\n    }\n\n    // because IE9 only supports MIME type 'text/xml', void elements need to be self-closed\n    if (isIE9) {\n      html = html.replace(VOID_ELEMENTS_REGEX, '<$1$2$3/>');\n    }\n\n    return domParser.parseFromString(html, mimeType);\n  };\n\n  parseFromDocument = parseFromString;\n}\n\n/**\n * DOMImplementation (performance: fair).\n *\n * @see https://developer.mozilla.org/docs/Web/API/DOMImplementation/createHTMLDocument\n */\nif (document.implementation) {\n  // title parameter is required in IE\n  // https://msdn.microsoft.com/en-us/library/ff975457(v=vs.85).aspx\n  var doc = document.implementation.createHTMLDocument(\n    isIE ? 'html-dom-parser' : undefined\n  );\n\n  /**\n   * Use HTML document created by `document.implementation.createHTMLDocument`.\n   *\n   * @param  {string} html      - The HTML string.\n   * @param  {string} [tagName] - The element to render the HTML (with 'body' as fallback).\n   * @return {HTMLDocument}\n   */\n  parseFromDocument = function (html, tagName) {\n    if (tagName) {\n      doc.documentElement.getElementsByTagName(tagName)[0].innerHTML = html;\n      return doc;\n    }\n\n    try {\n      doc.documentElement.innerHTML = html;\n      return doc;\n      // fallback when certain elements in `documentElement` are read-only (IE9)\n    } catch (err) {\n      if (parseFromString) {\n        return parseFromString(html);\n      }\n    }\n  };\n}\n\n/**\n * Template (performance: fast).\n *\n * @see https://developer.mozilla.org/docs/Web/HTML/Element/template\n */\nvar template = document.createElement('template');\nvar parseFromTemplate;\n\nif (template.content) {\n  /**\n   * Uses a template element (content fragment) to parse HTML.\n   *\n   * @param  {string} html - The HTML string.\n   * @return {NodeList}\n   */\n  parseFromTemplate = function (html) {\n    template.innerHTML = html;\n    return template.content.childNodes;\n  };\n}\n\n/**\n * Parses HTML string to DOM nodes.\n *\n * @param  {string}   html - HTML markup.\n * @return {NodeList}\n */\nfunction domparser(html) {\n  var firstTagName;\n  var match = html.match(FIRST_TAG_REGEX);\n\n  if (match && match[1]) {\n    firstTagName = match[1].toLowerCase();\n  }\n\n  var doc;\n  var element;\n  var elements;\n\n  switch (firstTagName) {\n    case HTML:\n      doc = parseFromString(html);\n\n      // the created document may come with filler head/body elements,\n      // so make sure to remove them if they don't actually exist\n      if (!HEAD_TAG_REGEX.test(html)) {\n        element = doc.getElementsByTagName(HEAD)[0];\n        if (element) {\n          element.parentNode.removeChild(element);\n        }\n      }\n\n      if (!BODY_TAG_REGEX.test(html)) {\n        element = doc.getElementsByTagName(BODY)[0];\n        if (element) {\n          element.parentNode.removeChild(element);\n        }\n      }\n\n      return doc.getElementsByTagName(HTML);\n\n    case HEAD:\n    case BODY:\n      elements = parseFromDocument(html).getElementsByTagName(firstTagName);\n\n      // if there's a sibling element, then return both elements\n      if (BODY_TAG_REGEX.test(html) && HEAD_TAG_REGEX.test(html)) {\n        return elements[0].parentNode.childNodes;\n      }\n      return elements;\n\n    // low-level tag or text\n    default:\n      if (parseFromTemplate) {\n        return parseFromTemplate(html);\n      }\n\n      return parseFromDocument(html, BODY).getElementsByTagName(BODY)[0]\n        .childNodes;\n  }\n}\n\nmodule.exports = domparser;\n","var domparser = require('./domparser');\nvar utilities = require('./utilities');\n\nvar formatDOM = utilities.formatDOM;\nvar isIE9 = utilities.isIE(9);\n\nvar DIRECTIVE_REGEX = /<(![a-zA-Z\\s]+)>/; // e.g., <!doctype html>\n\n/**\n * Parses HTML string to DOM nodes in browser.\n *\n * @param  {String} html  - HTML markup.\n * @return {DomElement[]} - DOM elements.\n */\nfunction HTMLDOMParser(html) {\n  if (typeof html !== 'string') {\n    throw new TypeError('First argument must be a string');\n  }\n\n  if (!html) {\n    return [];\n  }\n\n  // match directive\n  var match = html.match(DIRECTIVE_REGEX);\n  var directive;\n\n  if (match && match[1]) {\n    directive = match[1];\n\n    // remove directive in IE9 because DOMParser uses\n    // MIME type 'text/xml' instead of 'text/html'\n    if (isIE9) {\n      html = html.replace(match[0], '');\n    }\n  }\n\n  return formatDOM(domparser(html), null, directive);\n}\n\nmodule.exports = HTMLDOMParser;\n"],"names":["tagName","extendStatics","__extends","this","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","__","constructor","create","__assign","assign","t","s","i","n","arguments","length","apply","defineProperty","value","exports","nodeTypes","Map","Node","type","parent","prev","next","startIndex","endIndex","get","_a","enumerable","configurable","set","cloneNode","recursive","DataNode","_super","data","_this","Text","Comment","ProcessingInstruction","name","NodeWithChildren","children","Element","attribs","keys","map","node","instr","elem","cloneChildren","clone_1","forEach","child","clone_2","Error","childs","CASE_SENSITIVE_TAG_NAMES","constants","domhandler","caseSensitiveTagNamesMap","len","toLowerCase","formatAttributes","attributes","attribute","result","formatTagName","caseSensitiveTagName","getCaseSensitiveTagName","formatDOM","domNodes","parentNode","directive","domNode","prevNode","output","nodeType","nodeName","childNodes","nodeValue","push","substring","indexOf","unshift","isIE","version","document","documentMode","test","navigator","userAgent","HTML","HEAD","BODY","FIRST_TAG_REGEX","HEAD_TAG_REGEX","BODY_TAG_REGEX","VOID_ELEMENTS_REGEX","isIE9","utilities","parseFromDocument","parseFromString","window","DOMParser","domParser","mimeType","html","replace","implementation","doc","createHTMLDocument","undefined","documentElement","getElementsByTagName","innerHTML","err","parseFromTemplate","template","createElement","content","firstTagName","element","elements","match","removeChild","DIRECTIVE_REGEX","TypeError","domparser"],"mappings":"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"}